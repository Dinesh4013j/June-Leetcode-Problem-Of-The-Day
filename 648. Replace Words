In English, we have a concept called root, which can be followed by some other word to form another longer word - let's call this word derivative. For example, when the root "help" is followed by the word "ful", we can form a derivative "helpful".

Given a dictionary consisting of many roots and a sentence consisting of words separated by spaces, replace all the derivatives in the sentence with the root forming it. If a derivative can be replaced by more than one root, replace it with the root that has the shortest length.

Return the sentence after the replacement.

 

Example 1:

Input: dictionary = ["cat","bat","rat"], sentence = "the cattle was rattled by the battery"
Output: "the cat was rat by the bat"
Example 2:

Input: dictionary = ["a","b","c"], sentence = "aadsfasf absbs bbab cadsfafs"
Output: "a a b c"



class Solution:
    def replaceWords(self, dictionary: List[str], sentence: str) -> str:
        sentencearr=sentence.split(" ")
        n=len(sentencearr)
        # print(n)
        for i in range(n):
            
            val=sentencearr[i]
            # print(val)
            for j in range(len(val)):
                cur=val[:j+1]
                if cur in dictionary:
                    sentencearr[i]=cur
                    break
        # print(sentencearr)
        s=""
        for i in range(n):
            s+=sentencearr[i]
            if i!=n-1:
                s+=" "
        return s
